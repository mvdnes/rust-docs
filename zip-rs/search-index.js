var N = null;var searchIndex = {};
searchIndex["zip"]={"doc":"A basic ZipReader/Writer crate","items":[[4,"CompressionMethod","zip","Compression methods for the contents of a ZIP file.",N,N],[13,"Stored","","The file is stored (no compression)",0,N],[13,"Deflated","","The file is Deflated",0,N],[13,"Bzip2","","File is compressed using BZIP2 algorithm",0,N],[13,"Unsupported","","Unsupported compression method",0,N],[0,"read","","Structs for reading a ZIP archive",N,N],[3,"ZipArchive","zip::read","Wrapper for reading the contents of a ZIP file.",N,N],[3,"ZipFile","","A struct for reading a zip file",N,N],[5,"read_zipfile_from_stream","","Read ZipFile structures from a non-seekable reader.",N,[[["r"]],["zipresult",["option"]]]],[11,"clone","","",1,[[["self"]],["ziparchive"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"new","","Opens a Zip archive and parses the central directory",1,[[["r"]],["zipresult",["ziparchive"]]]],[11,"len","","Number of files contained in this zip.",1,[[["self"]],["usize"]]],[11,"offset","","Get the offset from the beginning of the underlying reader that this zip begins at, in bytes.",1,[[["self"]],["u64"]]],[11,"by_name","","Search for a file entry by name",1,[[["self"],["str"]],["zipresult",["zipfile"]]]],[11,"by_index","","Get a contained file by index",1,[[["self"],["usize"]],["zipresult",["zipfile"]]]],[11,"into_inner","","Unwrap and return the inner reader object",1,[[["self"]],["r"]]],[11,"version_made_by","","Get the version of the file",2,N],[11,"name","","Get the name of the file",2,[[["self"]],["str"]]],[11,"name_raw","","Get the name of the file, in the raw (internal) byte representation.",2,N],[11,"sanitized_name","","Get the name of the file in a sanitized form. It truncates the name to the first NULL byte, removes a leading '/' and removes '..' parts.",2,[[["self"]],["pathbuf"]]],[11,"comment","","Get the comment of the file",2,[[["self"]],["str"]]],[11,"compression","","Get the compression method used to store the file",2,[[["self"]],["compressionmethod"]]],[11,"compressed_size","","Get the size of the file in the archive",2,[[["self"]],["u64"]]],[11,"size","","Get the size of the file when uncompressed",2,[[["self"]],["u64"]]],[11,"last_modified","","Get the time the file was last modified",2,[[["self"]],["tm"]]],[11,"unix_mode","","Get unix mode for the file",2,[[["self"]],["option",["u32"]]]],[11,"crc32","","Get the CRC32 hash of the original file",2,[[["self"]],["u32"]]],[11,"data_start","","Get the starting offset of the data of the compressed file",2,[[["self"]],["u64"]]],[11,"read","","",2,N],[11,"drop","","",2,[[["self"]]]],[11,"clone","zip","",0,[[["self"]],["compressionmethod"]]],[11,"eq","","",0,[[["self"],["compressionmethod"]],["bool"]]],[11,"ne","","",0,[[["self"],["compressionmethod"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from_u16","","Converts an u16 to its corresponding CompressionMethod",0,[[["u16"]],["compressionmethod"]]],[11,"to_u16","","Converts a CompressionMethod to a u16",0,[[["self"]],["u16"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[0,"write","","Structs for creating a new zip archive",N,N],[3,"ZipWriter","zip::write","Generator for ZIP files.",N,N],[3,"FileOptions","","Metadata for a file to be written",N,N],[11,"clone","","",3,[[["self"]],["fileoptions"]]],[11,"default","","Construct a new FileOptions object",3,[[],["fileoptions"]]],[11,"compression_method","","Set the compression method for the new file",3,[[["self"],["compressionmethod"]],["fileoptions"]]],[11,"last_modified_time","","Set the last modified time",3,[[["self"],["tm"]],["fileoptions"]]],[11,"unix_permissions","","Set the permissions for the new file.",3,[[["self"],["u32"]],["fileoptions"]]],[11,"write","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"new","","Initializes the ZipWriter.",4,[[["w"]],["zipwriter"]]],[11,"start_file","","Starts a file.",4,[[["self"],["s"],["fileoptions"]],["zipresult"]]],[11,"add_directory","","Add a directory entry.",4,[[["self"],["s"],["fileoptions"]],["zipresult"]]],[11,"finish","","Finish the last file and write all other zip-structures",4,[[["self"]],["zipresult"]]],[11,"drop","","",4,[[["self"]]]],[0,"result","zip","Error types that can be emitted from this library",N,N],[4,"ZipError","zip::result","Error type for Zip",N,N],[13,"Io","","An Error caused by I/O",5,N],[13,"InvalidArchive","","This file is probably not a zip archive",5,N],[13,"UnsupportedArchive","","This archive is not supported",5,N],[13,"FileNotFound","","The requested file could not be found in the archive",5,N],[6,"ZipResult","","Generic result type with ZipError as its error variant",N,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"from","","",5,[[["error"]],["ziperror"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"to_owned","zip","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","zip::read","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"read_u64","","",2,[[["self"]],["result",["u64","error"]]]],[11,"read_u32","","",2,[[["self"]],["result",["u32","error"]]]],[11,"read_u16","","",2,[[["self"]],["result",["u16","error"]]]],[11,"read_u8","","",2,[[["self"]],["result",["u8","error"]]]],[11,"read_i64","","",2,[[["self"]],["result",["i64","error"]]]],[11,"read_i32","","",2,[[["self"]],["result",["i32","error"]]]],[11,"read_i16","","",2,[[["self"]],["result",["i16","error"]]]],[11,"read_i8","","",2,[[["self"]],["result",["i8","error"]]]],[11,"read_f64","","",2,[[["self"]],["result",["f64","error"]]]],[11,"read_f32","","",2,[[["self"]],["result",["f32","error"]]]],[11,"read_exact","","",2,[[["self"],["usize"]],["result",["vec","error"]]]],[11,"from","zip::write","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"write_u64","","",4,[[["self"],["u64"]],["result",["error"]]]],[11,"write_u32","","",4,[[["self"],["u32"]],["result",["error"]]]],[11,"write_u16","","",4,[[["self"],["u16"]],["result",["error"]]]],[11,"write_u8","","",4,[[["self"],["u8"]],["result",["error"]]]],[11,"write_i64","","",4,[[["self"],["i64"]],["result",["error"]]]],[11,"write_i32","","",4,[[["self"],["i32"]],["result",["error"]]]],[11,"write_i16","","",4,[[["self"],["i16"]],["result",["error"]]]],[11,"write_i8","","",4,[[["self"],["i8"]],["result",["error"]]]],[11,"write_f32","","",4,[[["self"],["f32"]],["result",["error"]]]],[11,"write_f64","","",4,[[["self"],["f64"]],["result",["error"]]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","zip::result","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]]],"paths":[[4,"CompressionMethod"],[3,"ZipArchive"],[3,"ZipFile"],[3,"FileOptions"],[3,"ZipWriter"],[4,"ZipError"]]};
initSearch(searchIndex);
