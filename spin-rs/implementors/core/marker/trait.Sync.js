(function() {var implementors = {};
implementors["spin"] = [{"text":"impl&lt;R&gt; Sync for Barrier&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T, F&nbsp;=&nbsp;fn() -&gt; T, R&nbsp;=&nbsp;Spin&gt; !Sync for Lazy&lt;T, F, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, R&nbsp;=&nbsp;Spin&gt; !Sync for SpinMutex&lt;T, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Sync for SpinMutexGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, R&nbsp;=&nbsp;Spin&gt; !Sync for TicketMutex&lt;T, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Sync for TicketMutexGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Sync for MutexGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Sync for RwLockReadGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized, R&gt; Sync for RwLockWriteGuard&lt;'a, T, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized, R&gt; Sync for RwLockUpgradableGuard&lt;'a, T, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Spin","synthetic":true,"types":[]},{"text":"impl Sync for Loop","synthetic":true,"types":[]},{"text":"impl&lt;T, F:&nbsp;Send&gt; Sync for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Once&lt;T&gt;: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Sync for SpinMutex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Sync for TicketMutex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send, R&gt; Sync for Mutex&lt;T, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send + Sync, R&gt; Sync for Once&lt;T, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send + Sync, R&gt; Sync for RwLock&lt;T, R&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()