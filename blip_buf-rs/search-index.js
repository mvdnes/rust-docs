var searchIndex = JSON.parse('{\
"blip_buf":{"doc":"blip_buf is a small waveform synthesis library meant for…","i":[[3,"BlipBuf","blip_buf","Sample buffer that resamples from input clock rate to…",null,null],[17,"MAX_RATIO","","Maximum `clock_rate / sample_rate ratio`. For a given…",null,null],[17,"MAX_FRAME","","Maximum number of samples that can be generated from one…",null,null],[11,"new","","Creates new buffer that can hold at most sample_count…",0,[[],["blipbuf",3]]],[11,"set_rates","","Sets approximate input clock rate and output sample rate.…",0,[[]]],[11,"clear","","Clears entire buffer. Afterwards, `samples_avail() == 0`.",0,[[]]],[11,"add_delta","","Adds positive/negative delta into buffer at specified…",0,[[]]],[11,"add_delta_fast","","Same as `add_delta()`, but uses faster, lower-quality…",0,[[]]],[11,"clocks_needed","","Length of time frame, in clocks, needed to make…",0,[[]]],[11,"end_frame","","Makes input clocks before `clock_duration` available for…",0,[[]]],[11,"samples_avail","","Number of buffered samples available for reading.",0,[[]]],[11,"read_samples","","Reads and removes at most `buf.len()` samples and writes…",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"drop","","",0,[[]]]],"p":[[3,"BlipBuf"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);