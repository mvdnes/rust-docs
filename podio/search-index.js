var searchIndex = {};
searchIndex["podio"] = {"doc":"Additional methods for Read and Write","items":[[4,"LittleEndian","podio","Little endian. The number `0xABCD` is stored `[0xCD, 0xAB]`",null,null],[4,"BigEndian","","Big endian. The number `0xABCD` is stored `[0xAB, 0xCD]`",null,null],[8,"Endianness","","Trait implementing conversion methods for a specific endianness",null,null],[10,"int_to_target","","Converts a value from the platform type to the specified endianness",0,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[10,"int_from_target","","Converts a value from the sepcified endianness to the platform type",0,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"EndianConvert","","Generic trait for endian conversions on integers",null,null],[10,"to_be","","Convert self to a big-endian value",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert self to a little-endian value",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert a big-endian value to the target endianness",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert a little-endian value to the target endiannes",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"WritePodExt","","Additional write methods for a io::Write",null,null],[10,"write_u64","","Write a u64",2,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"write_u32","","Write a u32",2,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"write_u16","","Write a u16",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"write_u8","","Write a u8",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"write_i64","","Write a i64",2,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"write_i32","","Write a i32",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"write_i16","","Write a i16",2,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"write_i8","","Write a i8",2,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"write_f32","","Write a f32",2,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"write_f64","","Write a f64",2,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ReadPodExt","","Additional read methods for a io::Read",null,null],[10,"read_u64","","Read a u64",3,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[10,"read_u32","","Read a u32",3,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[10,"read_u16","","Read a u16",3,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"result"}}],[10,"read_u8","","Read a u8",3,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"result"}}],[10,"read_i64","","Read a i64",3,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"result"}}],[10,"read_i32","","Read a i32",3,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[10,"read_i16","","Read a i16",3,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[10,"read_i8","","Read a i8",3,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"result"}}],[10,"read_f32","","Read a f32",3,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"result"}}],[10,"read_f64","","Read a f64",3,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"result"}}],[10,"read_exact","","Read a specific number of bytes",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["vec"],"name":"result"}}],[11,"int_to_target","","",4,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[11,"int_from_target","","",4,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[11,"int_to_target","","",5,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[11,"int_from_target","","",5,{"inputs":[{"name":"t"}],"output":{"name":"t"}}]],"paths":[[8,"Endianness"],[8,"EndianConvert"],[8,"WritePodExt"],[8,"ReadPodExt"],[4,"LittleEndian"],[4,"BigEndian"]]};
initSearch(searchIndex);
